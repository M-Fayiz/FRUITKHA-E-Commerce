<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Profile - Fruitkha</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.2/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #f8f9fa;
        }
        .card {
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        .btn-orange {
            background-color: #ff6600;
            color: white;
        }
        .btn-orange:hover {
            background-color: #e55b00;
        }
    </style>
    <style>
        :root {
            --primary-color: #F28123;
            --sidebar-width: 280px;
            --sidebar-bg: #fff;
            --sidebar-hover: #f8f9fa;
            --sidebar-active: #e8f0fe;
            --sidebar-text: #333;
        }
        
        body {
            font-size: 16px;
        }
        
        .sidebar {
            width: var(--sidebar-width);
            background-color: var(--sidebar-bg);
            min-height: calc(100vh - 80px);
            transition: all 0.3s;
            box-shadow: 2px 0 5px rgba(0,0,0,0.05);
        }
        
        .main-content {
            margin-left: 30px;
            padding: 40px;
            background-color: #f8f9fa;
         
            min-height: calc(100vh - 80px);
            transition: all 0.3s;
        }
        
        .nav-link {
            color: var(--sidebar-text);
            padding: 16px 25px;
            margin: 6px 0;
            transition: all 0.3s;
            border-radius: 0;
            font-size: 16px;
        }
        
        .nav-link:hover {
            background-color: var(--sidebar-hover);
            color: var(--primary-color);
        }
        
        .nav-link.active {
            background-color: var(--sidebar-active);
            color: var(--primary-color);
            border-left: 4px solid var(--primary-color);
        }
        
        .nav-link i {
            width: 24px;
            margin-right: 12px;
            font-size: 18px;
        }
        
        .content-card {
            background: #fff;
            border-radius: 12px;
            padding: 35px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.08);
            margin-bottom: 30px;
        }
        
        .content-card h5 {
            font-size: 22px;
            margin-bottom: 25px;
            color: #333;
            font-weight: 600;
        }
        
        .btn-primary {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
            padding: 12px 30px;
            font-size: 16px;
            font-weight: 500;
        }
        
        .btn-primary:hover {
            background-color: #d97320;
            border-color: #d97320;
        }
        
        .form-label {
            font-size: 16px;
            color: #444;
            margin-bottom: 8px;
            font-weight: 500;
        }
        
        .form-control {
            padding: 12px 18px;
            font-size: 16px;
            border-radius: 8px;
            border: 1px solid #ddd;
        }
        
        .form-control:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 0.2rem rgba(242, 129, 35, 0.25);
        }
        
        .text-danger {
            color: #dc3545 !important;
        }
        
        .forgot-password {
            color: var(--primary-color);
            font-size: 15px;
            text-decoration: none;
        }
        
        .forgot-password:hover {
            text-decoration: underline;
        }
        
        .navbar {
            padding: 15px 0;
        }
        
        .navbar-brand img {
            height: 50px;
        }
        
        @media (max-width: 768px) {
            .sidebar {
                width: 100%;
                min-height: auto;
            }
            .main-content {
                margin-left: 0;
                padding: 20px;
            }
            .content-card {
                padding: 25px;
            }
        }
        #place {
    white-space: normal; /* Allows text wrapping */
    overflow-y: auto;   /* Enables scrolling if content overflows */
    max-height: 200px;  /* Limits the height of the dropdown */
}

    </style>
    <link rel="stylesheet" href="/SHOW.css">
    
</head>
<body>
    
    <%-include('../partials/profile_NAV.ejs')%>
    <div class="d-flex">
    <%-include('../partials/profileSIDEBAR.ejs')%>
    <%-include('../partials/block.ejs')%>

    <div class="container my-5">
      
      <h2 class="text-center mb-4">Manage Addresses</h2>

      <!-- Add Address Button -->
      <div class="text-end mb-3 " style="padding-right: 70px;" >
          <button class="btn btn-orange btn-sm" data-bs-toggle="modal" data-bs-target="#addAddressModal">
              <i class="bi bi-plus"></i> Add Address
          </button>
      </div>

      <!-- Addresses List -->
      <div id="addresses"  style="display: flex;flex-basis: 400px; gap: 20px;">
          <!-- Example Address -->
           <% addres.forEach(item=>{ %> 
          <div class="card mb-3 " style="padding: 7px;">
              <div class="card-body">
                  <h5 class="card-title"><%=item.Address_name %></h5>
                  <div style="display: flex; gap: 8px;">
                  <p><span style="color: #5a5a5a;">Name :</span><%=item.Name%></p>
                  <p><span style="color: #5a5a5a;">State :</span><%=item.State %></p>
                  <p><span style="color: #5a5a5a;">City :</span><%= item.District %></p>
                  </div>
                  <div>
                  <p><span style="color: #5a5a5a;">Place :</span><%=item.place%></p>
                  <p><span style="color: #5a5a5a;">Pin code:</span><%=item.PIN %></p>
                 
                  </div>
                  <p ><span style="color: #5a5a5a;">Landmark :</span><%=item.mark%></p>
                 
                  <div class="text-end">
                    <button type="button" class="btn btn-primary" style="padding: 5px;" data-bs-toggle="modal" data-bs-target="#editAddressModal" onclick="editAddress('<%=item.Address_name %>','<%=item.Name%>','<%=item.State %>','<%= item.District %>','<%=item.place%>','<%=item.PIN %>','<%=item.mark%>','<%=item.id%>')">
                        Edit Address
                      </button>
                      
                      <!-- <button class="btn btn-sm btn-outline-primary me-2" onclick="editAddress()">Edit</button> -->
                      <button class="btn btn-sm btn-outline-danger" onclick="deleteAddress('<%=item.id%>')">Delete</button>
                  </div>
              </div>
          </div>
          <%})%>

          <!-- <div class="card mb-3">
              <div class="card-body">
                  <h5 class="card-title">Office Address</h5>
                  <p class="card-text">
                      456 Elm Street, Suite 300, Business City, State 12345
                  </p>
                  <div class="text-end">
                      <button class="btn btn-sm btn-outline-primary me-2" onclick="editAddress()">Edit</button>
                      <button class="btn btn-sm btn-outline-danger" onclick="deleteAddress()">Delete</button>
                  </div>
              </div>
          </div> -->
      </div>
  </div>
</div>

<!-- modal -->
<div class="modal fade" id="addAddressModal" tabindex="-1" aria-labelledby="addAddressModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addAddressModalLabel">Add Address</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="address-form">
                    <div class="mb-3">
                        <label for="addressName" class="form-label">Address Name</label>
                        <input type="text" class="form-control" id="addressName" placeholder="Home or Office">
                     </div >
                    <div class="mb-3">
                        <label for="Name" class="form-label">Name of  Customer</label>
                        <input type="text" class="form-control" id="NAME" placeholder="You Name">
                     </div >
                    <div style="display: flex; justify-content: space-between;">
                    <div class="mb-3">
                        <label for="pincode" class="form-label">Pincode</label>
                        <input type="text" class="form-control" id="pincode" placeholder="Enter Pincode">
                    </div>
                    <div class="mb-3">
                        <label for="streetName" class="form-label">Place</label>
                        <select name="" id="place" class="form-control">
                           
                            <option   value="">Select Place</option>
                            
                        </select>
                    </div>
                  </div>
                    <div class="mb-3">
                        <label for="landmark" class="form-label">Landmark</label>
                        <input type="text" class="form-control" id="landmark" placeholder="Enter Landmark">
                    </div>
                 <div class="d-flex " style=" display: flex; gap: 10px;">
                    <div class="mb-3">
                        <label for="city" class="form-label">District</label>
                        <input type="text" class="form-control" id="city" placeholder="Enter City">
                    </div>
                    <div class="mb-3">
                        <label for="state" class="form-label">State</label>
                        <input type="text" class="form-control" id="state" placeholder="Enter State">
                        <input type="text" name="" id="user" value="<%=user%>" hidden>
                    </div>
                    <div id="validationResult" class="mt-4"></div>
                 </div> 
                    <button type="submit" class="btn btn-success">Save</button>
                </form>
            </div>
        </div>
    </div>
</div>
<!-- hello -->
<div class="modal fade" id="editAddressModal" tabindex="-1" aria-labelledby="editAddressModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="editAddressModalLabel">Edit Address</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form id="edit-address-form">
            <div class="mb-3">
              <label for="editAddressName" class="form-label">Address Name</label>
              <input type="text" class="form-control" id="editAddressName" placeholder="Home or Office" required>
            </div>
            <div class="mb-3">
              <label for="editCustomerName" class="form-label">Name of Customer</label>
              <input type="text" class="form-control" id="editCustomerName" placeholder="Your Name" required>
            </div>
            <div class="row">
              <div class="col-md-6 mb-3">
                <label for="editPincode" class="form-label">Pincode</label>
                <input type="text" class="form-control" id="editPincode" placeholder="Enter Pincode" required>
              </div>
              <div class="col-md-6 mb-3">
                <label for="editPlace" class="form-label">Place</label>
                <input type="text" id="editPlace" class="form-select" >
                
              </div>
            </div>
            <div class="mb-3">
              <label for="editLandmark" class="form-label">Landmark</label>
              <input type="text" class="form-control" id="editLandmark" placeholder="Enter Landmark" required>
            </div>
            <div class="row">
              <div class="col-md-6 mb-3">
                <label for="editCity" class="form-label">District</label>
                <input type="text" class="form-control" id="editCity" placeholder="Enter City" required>
              </div>
              <div class="col-md-6 mb-3">
                <label for="editState" class="form-label">State</label>
                <input type="text" class="form-control" id="editState" placeholder="Enter State" required>
              </div>
            </div>
          </form>
        </div>
        <div id="Result" class="mt-4"></div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="submit" form="edit-address-form" class="btn btn-success">Save Changes</button>
        </div>
      </div>
    </div>
  </div>
  <!--  -->
<script src="/TOAST.js"></script>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
   document.getElementById('address-form').addEventListener('submit', async (e) => {
    e.preventDefault();

    const adres_name = document.getElementById('addressName').value.trim();
    const Name = document.getElementById('NAME').value.trim();
    const pincode = document.getElementById('pincode').value.trim();
    const place = document.getElementById('place').value.trim();
    const city = document.getElementById('city').value.trim();
    const state = document.getElementById('state').value.trim();
    const mark=document.getElementById('landmark').value.trim()
    const user = document.getElementById('user').value;
    const resultDiv = document.getElementById("validationResult");

    if(Name==''||pincode==''||place==''||city==""||state==''||mark==''||adres_name==''){

        resultDiv.innerHTML = `<p class="text-danger">Fill out Required Field.</p>`;
    }

    try {
        
        const response = await fetch(`https://api.postalpincode.in/pincode/${pincode}`);
        const data = await response.json();

        if (data[0].Status === "Success") {
            const postOffices = data[0].PostOffice;
            const PIN_region = postOffices.map(val => val.Name);

            
            populatePlaceDropdown(PIN_region);

            
            const isValidState = postOffices.some(
                (office) => office.State.toLowerCase() === state.toLowerCase()
            );
            const isValidDistrict = postOffices.some(
                (office) => office.District.toLowerCase() === city.toLowerCase()
            );
            const isValidStreet = postOffices.some(
                (office) => office.Name.toLowerCase() === place.toLowerCase()
            );

            if (isValidState && isValidDistrict && isValidStreet) {
                resultDiv.innerHTML = `<p class="text-success">Validation Successful! All details match.</p>`;
            } else {
                resultDiv.innerHTML = `<p class="text-danger">Validation Failed! Please check the details.</p>`;
            }
        } else {
            resultDiv.innerHTML = `<p class="text-danger">Invalid Pincode or No Data Found.</p>`;
        }
    } catch (error) {
        resultDiv.innerHTML = `<p class="text-danger">Error: ${error.message}</p>`;
    }

    fetch('/addADRS',{
        method:'post',
        headers:{
            'Content-Type':'application/json'
        },
        body:JSON.stringify({
            Name,
            adres_name,
            pincode,
            place,
            city,
            state,
            mark,
            user
        })
    }).then(res=>res.json())
    .then(data=>{
        if(data.success){
        showToast(data.message,'success')
         window.location.reload()
        }else{
            showToast(data.message,'error')
        }
    })
    
});


function populatePlaceDropdown(places) {
    const placeDropdown = document.getElementById("place")
    placeDropdown.innerHTML = `<option value="">Select a place</option>`; // Clear existing options

    places.forEach((place) => {
        const option = document.createElement("option");
        option.value = place;
        option.textContent = place;
        placeDropdown.appendChild(option);
    });

    
}


document.getElementById("pincode").addEventListener("input", async function () {
    const pincode = this.value.trim();

    if (pincode.length === 6) { // Fetch only for valid-length pincodes
        try {
            const response = await fetch(`https://api.postalpincode.in/pincode/${pincode}`);
            const data = await response.json();

            if (data[0].Status === "Success") {
                const postOffices = data[0].PostOffice;
                const state = postOffices[0].State;
                const district = postOffices[0].District;
                const PIN_region = postOffices.map((val) => val.Name);

                document.getElementById("state").value = state;
                document.getElementById("city").value = district;

                populatePlaceDropdown(PIN_region);
            } else {
                resetFields();
            }
        } catch (error) {
            console.error("Error fetching pincode data:", error);
            resetFields();
        }
    } else {
        resetFields();
    }
});

function resetFields() {
    document.getElementById("place").innerHTML = `<option value="">Select a place</option>`;
    document.getElementById("state").value = "";
    document.getElementById("city").value = "";
}


// DELET ADDRESS // DELET ADDRESS // DELET ADDRESS // DELET ADDRESS

function deleteAddress(adrsID){
    fetch('/delete-Adres',{
        method:'DELETE',
        headers:{
            'Content-Type':'application/json'
        },
        body:JSON.stringify({adrsID})
    }).then(res=>res.json())
    .then(data=>{
        if(data.success){
            showToast(data.message,'success')
            setTimeout(()=>{
                window.location.reload()
            })
            
        }else{
            showToast(data.message,'error')
        }
    })
}
/// EDIT ADDRESS // EDIT ADDRESS // EDIT ADDRESS // EDIT ADDRESS 

function editAddress(Name, adName, State, District, Place, Pincode, mark, user) {
    console.log(Name, adName, State, District, Place, Pincode, mark);

    
    document.getElementById('editCustomerName').value = Name;
    document.getElementById('editAddressName').value = adName;
    document.getElementById('editPincode').value = Pincode;
    document.getElementById('editPlace').value = Place;
    document.getElementById('editCity').value = District;
    document.getElementById('editState').value = State;
    document.getElementById('editLandmark').value = mark;

   
    document.getElementById('edit-address-form').setAttribute('data-user', user);

    
    document.getElementById('edit-address-form').addEventListener('submit', async (e) => {
        e.preventDefault();

        const editCustomerName = document.getElementById('editCustomerName').value.trim();
        const editAddressName = document.getElementById('editAddressName').value.trim();
        const editPincode = document.getElementById('editPincode').value.trim();
        const editPlace = document.getElementById('editPlace').value.trim();
        const editCity = document.getElementById('editCity').value.trim();
        const editState = document.getElementById('editState').value.trim();
        const editLandmark = document.getElementById('editLandmark').value.trim();
        const user = document.getElementById('edit-address-form').getAttribute('data-user');

        try {
            // Fetch API to validate pincode
            const response = await fetch(`https://api.postalpincode.in/pincode/${editPincode}`);
            const data = await response.json();

            if (data[0].Status === "Success") {
                const postOffices = data[0].PostOffice;
                const isValidState = postOffices.some(
                    (office) => office.State.toLowerCase() === editState.toLowerCase()
                );
                const isValidDistrict = postOffices.some(
                    (office) => office.District.toLowerCase() === editCity.toLowerCase()
                );
                const isValidStreet = postOffices.some(
                    (office) => office.Name.toLowerCase() === editPlace.toLowerCase()
                );

                if (isValidState && isValidDistrict && isValidStreet) {
                    document.getElementById('Result').innerHTML = `<p class="text-success">Validation Successful! All details match.</p>`;

                    // Make PATCH request to update the address
                    await fetch('/editADRS', {
                        method: 'PATCH',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            Name: editCustomerName,
                            AdName: editAddressName,
                            PIN: editPincode,
                            PLace: editPlace,
                            City: editCity,
                            State: editState,
                            Mark: editLandmark,
                            user: user,
                        }),
                    }).then((res) => res.json())
                      .then((data) => {
                        if (data.success) {
                            showToast(data.message, 'success');
                            setTimeout(()=>{
                                window.location.reload();
                            },200)
                           
                        } else {
                            showToast(data.message, 'error');
                        }
                    });
                } else {
                    document.getElementById('Result').innerHTML = `<p class="text-danger">Validation Failed! Please check the details.</p>`;
                }
            } else {
                document.getElementById('Result').innerHTML = `<p class="text-danger">Invalid Pincode or No Data Found.</p>`;
            }
        } catch (error) {
            document.getElementById('Result').innerHTML = `<p class="text-danger">Error: ${error.message}</p>`;
        }
    });
}

</script>

  
</body>
</html>


